#!/usr/bin/ruby
require           'optparse'
require           'rubygems'
gem               'aws-sdk'
require           'aws-sdk'
require           'erb'

EB_CONFIG_APP_SUPPORT = ENV['EB_CONFIG_APP_SUPPORT']
ENVIRONMENT_NAME_FILE = File.join(EB_CONFIG_APP_SUPPORT, 'env_name')

# Options Parsing
options = {}
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($PROGRAM_NAME)} [options]"

  # Define the options, and what they do
  options[:no_update] = false
  opts.on('--no-update', 'Do not update crontab after making leader') do
    options[:no_update] = true
  end

  # This displays the help screen, all programs are
  # assumed to have this option.
  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end
end
optparse.parse!

Whenever::Elasticbeanstalk

ec2_instance_id = instance_id()
ec2_availability_zone = availability_zone
region = availability_zone.slice(0..availability_zone.length - 2)

credentials = Aws::InstanceProfileCredentials.new
ec2_resource = Aws::EC2::Resource.new(region: region, credentials: credentials)
eb_environment_name = environment_name(ec2_instance_id)
ec2_leader_instances = leader_instances(ec2_resource, eb_environment_name)

if ec2_leader_instances.count < 1
  tags = [{ key: 'leader', value: 'true' }]
  ec2_resource.create_tags(resources: [ec2_instance_id], tags: tags)
end

`/usr/local/bin/bundle exec setup_cron` unless options[:no_update]
